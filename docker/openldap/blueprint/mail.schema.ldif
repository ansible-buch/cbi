# mail.schema (converted to ldif)
dn: cn=mail,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: mail
olcAttributeTypes: {0}( 1.3.6.1.4.1.99999.1.1.1 NAME 'mailAlias' DESC 'mail 
 Alias' EQUALITY caseIgnoreIA5Match SUBSTR caseIgnoreIA5SubstringsMatch SYNT
 AX 1.3.6.1.4.1.1466.115.121.1.26{256} )
olcAttributeTypes: {1}( 1.3.6.1.4.1.99999.1.1.2 NAME 'mailForwarding' DESC '
 mail Forwarding' EQUALITY caseIgnoreIA5Match SUBSTR caseIgnoreIA5Substrings
 Match SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{2560} )
olcAttributeTypes: {2}( 1.3.6.1.4.1.99999.1.1.3 NAME 'mailDomainName' DESC '
 Domain name used by the mail server' EQUALITY caseIgnoreIA5Match SUBSTR cas
 eIgnoreIA5SubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{64} )
olcAttributeTypes: {3}( 1.3.6.1.4.1.99999.1.1.4 NAME 'mailDomainNameAlias' D
 ESC 'Domain Alias name used by the mail server' EQUALITY caseIgnoreIA5Match
  SUBSTR caseIgnoreIA5SubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{6
 4} )
olcAttributeTypes: {4}( 1.3.6.1.4.1.99999.1.1.5 NAME 'mailServer' DESC 'next
 -hop destination mail Server name' EQUALITY caseIgnoreIA5Match SUBSTR caseI
 gnoreIA5SubstringsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{32} SINGLE-VAL
 UE )
olcAttributeTypes: {5}( 1.3.6.1.4.1.99999.1.1.6 NAME 'mailAccountActive' DES
 C 'Set this attribute to yes to enable mail account' EQUALITY caseExactIA5M
 atch SYNTAX 1.3.6.1.4.1.1466.115.121.1.26{3} SINGLE-VALUE )
olcObjectClasses: {0}( 1.3.6.1.4.1.99999.1.2.1 NAME 'MailAccount' DESC 'Mail
  account object as used by the mail server' SUP top AUXILIARY MUST ( uid $ 
 mail $ mailAccountActive ) MAY ( mailAlias $ mailForwarding $ mailAccountAc
 tive ) )
olcObjectClasses: {1}( 1.3.6.1.4.1.99999.1.2.2 NAME 'MailDomain' DESC 'Domai
 n mail entry' SUP top STRUCTURAL MUST mailDomainName MAY ( mailDomainNameAl
 ias $ mailServer ) )
